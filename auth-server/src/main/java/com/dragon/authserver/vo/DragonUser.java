package com.dragon.authserver.vo;import lombok.*;import org.springframework.security.core.GrantedAuthority;import org.springframework.security.core.userdetails.User;import java.util.Collection;import java.util.List;/** * @author yaohw * @date 2019-09-25 16:12 */@Getter@Setter@EqualsAndHashCode(callSuper = true)public class DragonUser extends User {    private String id;    private String username;    private String password;    private String test;    private boolean isEnable;    private Collection<? extends GrantedAuthority> authorities;    public DragonUser(String id, String username, String password, String test, boolean isEnable, Collection<? extends GrantedAuthority> authorities) {        super(username, password, authorities);        this.id = id;        this.username = username;        this.password = password;        this.test = test;        this.isEnable = isEnable;        this.authorities = authorities;    }    @Override    public Collection<GrantedAuthority> getAuthorities() {        return super.getAuthorities();    }    @Override    public String getPassword() {        return super.getPassword();    }    @Override    public String getUsername() {        return super.getUsername();    }    @Override    public boolean isEnabled() {        return super.isEnabled();    }    @Override    public boolean isAccountNonExpired() {        return super.isAccountNonExpired();    }    @Override    public boolean isAccountNonLocked() {        return super.isAccountNonLocked();    }    @Override    public boolean isCredentialsNonExpired() {        return super.isCredentialsNonExpired();    }}